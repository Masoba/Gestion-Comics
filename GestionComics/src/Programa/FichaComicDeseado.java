/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Programa;

import Modelo.Tomo;
import java.awt.Image;
import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import util.Conexion;

/**
 *
 * @author MasobaPC
 */
public class FichaComicDeseado extends javax.swing.JFrame {

    /**
     * Creates new form AñadirComicBiblioteca
     */
    int IDTomo;

    public FichaComicDeseado(int IDTomo) {
        initComponents();
        setEditable(false);
        this.IDTomo = IDTomo;
        cargarComic();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        pnlBotones = new javax.swing.JPanel();
        btnModificar = new javax.swing.JButton();
        btnGuardarModificacion = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnComprado = new javax.swing.JButton();
        btnBorrarComic = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnAtras = new javax.swing.JButton();
        pnlDatos = new javax.swing.JPanel();
        lblPortada = new javax.swing.JLabel();
        txtPortada = new javax.swing.JTextField();
        btnPortada = new javax.swing.JButton();
        lblImagenPortada = new javax.swing.JLabel();
        lblPrecio = new javax.swing.JLabel();
        ftxPrecio = new javax.swing.JFormattedTextField();
        lblEditorialUSA = new javax.swing.JLabel();
        lblEditorialESP = new javax.swing.JLabel();
        lblSuperheroe = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();
        txtSuperheroe = new javax.swing.JTextField();
        txtTitulo = new javax.swing.JTextField();
        lblGenero = new javax.swing.JLabel();
        lblPaginas = new javax.swing.JLabel();
        txtPaginas = new javax.swing.JTextField();
        lblFechaEdicion = new javax.swing.JLabel();
        lblGuionista = new javax.swing.JLabel();
        txtGuionista = new javax.swing.JTextField();
        lblDibujante = new javax.swing.JLabel();
        txtDibujante = new javax.swing.JTextField();
        lblEnlace = new javax.swing.JLabel();
        txtEnlace = new javax.swing.JTextField();
        ftxFechaEdicion = new javax.swing.JFormattedTextField();
        lblTipo = new javax.swing.JLabel();
        rbtComic = new javax.swing.JRadioButton();
        rbtManga = new javax.swing.JRadioButton();
        cbxEditorialUSA = new javax.swing.JComboBox();
        cbxEditorialESP = new javax.swing.JComboBox();
        cbxGenero = new javax.swing.JComboBox();
        lblColeccion = new javax.swing.JLabel();
        txtColeccion = new javax.swing.JTextField();
        pnlCabecera = new javax.swing.JPanel();
        lblCabecera = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlBotones.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnModificar.setText("Modificar Cómic");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        pnlBotones.add(btnModificar);

        btnGuardarModificacion.setText("Guardar Modificación");
        btnGuardarModificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarModificacionActionPerformed(evt);
            }
        });
        pnlBotones.add(btnGuardarModificacion);

        btnCancelar.setText("Cancelar Modificación");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pnlBotones.add(btnCancelar);

        btnComprado.setText("¡Ya lo tengo!");
        btnComprado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompradoActionPerformed(evt);
            }
        });
        pnlBotones.add(btnComprado);

        btnBorrarComic.setText("Borrar Cómic");
        btnBorrarComic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarComicActionPerformed(evt);
            }
        });
        pnlBotones.add(btnBorrarComic);

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        pnlBotones.add(btnLimpiar);

        btnAtras.setText("Atrás");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });
        pnlBotones.add(btnAtras);

        getContentPane().add(pnlBotones, java.awt.BorderLayout.PAGE_END);

        pnlDatos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlDatos.setLayout(new java.awt.GridBagLayout());

        lblPortada.setText("Portada");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblPortada, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtPortada, gridBagConstraints);

        btnPortada.setText("Elegir");
        btnPortada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPortadaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(btnPortada, gridBagConstraints);

        lblImagenPortada.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblImagenPortada.setPreferredSize(new java.awt.Dimension(288, 437));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblImagenPortada, gridBagConstraints);

        lblPrecio.setText("Precio* (X,XX)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblPrecio, gridBagConstraints);

        ftxPrecio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(ftxPrecio, gridBagConstraints);

        lblEditorialUSA.setText("Editorial USA*");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblEditorialUSA, gridBagConstraints);

        lblEditorialESP.setText("Editorial ESP*");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblEditorialESP, gridBagConstraints);

        lblSuperheroe.setText("Superhéroe");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblSuperheroe, gridBagConstraints);

        lblTitulo.setText("Titulo*");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblTitulo, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtSuperheroe, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtTitulo, gridBagConstraints);

        lblGenero.setText("Genero*");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblGenero, gridBagConstraints);

        lblPaginas.setText("Páginas*");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblPaginas, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtPaginas, gridBagConstraints);

        lblFechaEdicion.setText("Fecha Edición* (XX/XX/XXXX)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblFechaEdicion, gridBagConstraints);

        lblGuionista.setText("Guionista*");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblGuionista, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtGuionista, gridBagConstraints);

        lblDibujante.setText("Dibujante*");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblDibujante, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtDibujante, gridBagConstraints);

        lblEnlace.setText("Enlace");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblEnlace, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtEnlace, gridBagConstraints);

        ftxFechaEdicion.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("d/MM/yyyy"))));
        ftxFechaEdicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxFechaEdicionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(ftxFechaEdicion, gridBagConstraints);

        lblTipo.setText("Tipo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblTipo, gridBagConstraints);

        buttonGroup1.add(rbtComic);
        rbtComic.setText("Cómic");
        rbtComic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtComicActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(rbtComic, gridBagConstraints);

        buttonGroup1.add(rbtManga);
        rbtManga.setText("Manga");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(rbtManga, gridBagConstraints);

        cbxEditorialUSA.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dark Horse", "DC", "Image", "MacMillan", "Marvel", "Vertigo" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(cbxEditorialUSA, gridBagConstraints);

        cbxEditorialESP.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "deBolsillo", "ECC", "Ivrea", "MilkWay", "Norma", "Panini", "Planeta" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(cbxEditorialESP, gridBagConstraints);

        cbxGenero.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Superheroico", "Infantil", "Ciencia Ficción", "Novela gráfica", "Humor", "Fantasía y aventura", "Sobrenatural y paranormal", "Serie negra", "Bélico", "Histórico", "Shonen", "Shojo", "Seinen", "Kodomo", "Haren", "Mecha" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(cbxGenero, gridBagConstraints);

        lblColeccion.setText("Colección");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblColeccion, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtColeccion, gridBagConstraints);

        getContentPane().add(pnlDatos, java.awt.BorderLayout.CENTER);

        pnlCabecera.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblCabecera.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCabecera.setText("Ficha de Cómic");
        pnlCabecera.add(lblCabecera);

        getContentPane().add(pnlCabecera, java.awt.BorderLayout.PAGE_START);

        setSize(new java.awt.Dimension(902, 618));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void limpiar() {
        ftxFechaEdicion.setValue(null);
        ftxPrecio.setValue(null);
        txtDibujante.setText("");
        cbxEditorialESP.setSelectedIndex(0);
        cbxEditorialUSA.setSelectedIndex(0);
        txtEnlace.setText("");
        cbxGenero.setSelectedIndex(0);
        txtGuionista.setText("");
        txtPaginas.setText("");
        txtPortada.setText("");
        txtSuperheroe.setText("");
        txtTitulo.setText("");
        lblImagenPortada.setIcon(null);
        rbtComic.setSelected(false);
        rbtManga.setSelected(false);

    }

    public void irBiblioteca() {
        Biblioteca b = new Biblioteca();
        b.setVisible(true);
        this.dispose();
    }

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        this.setEditable(true);

    }//GEN-LAST:event_btnModificarActionPerformed

    private void ftxFechaEdicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxFechaEdicionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftxFechaEdicionActionPerformed

    private void btnPortadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPortadaActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int respuesta = fc.showOpenDialog(pnlDatos);

        if (respuesta == JFileChooser.APPROVE_OPTION) {
            File archivoElegido = fc.getSelectedFile();
            txtPortada.setText(archivoElegido.getAbsolutePath());
        }

        ImageIcon portada = new ImageIcon(txtPortada.getText());
        Image img = portada.getImage();
        img = img.getScaledInstance(288, 437, java.awt.Image.SCALE_SMOOTH);
        portada = new ImageIcon(img);
        lblImagenPortada.setIcon(portada);

    }//GEN-LAST:event_btnPortadaActionPerformed

    private void btnGuardarModificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarModificacionActionPerformed
        Double precio = 0.0;
        if (ftxPrecio.getValue() != null) {
            Number n = (Number) ftxPrecio.getValue();
            precio = n.doubleValue();
        } else {
            JOptionPane.showMessageDialog(this, "Ingresa el precio del cómic.");
            return;
        }

        String fecha = "";
        if (ftxFechaEdicion.getValue() != null) {
            SimpleDateFormat formatear = new SimpleDateFormat("dd/MM/yyyy");
            fecha = formatear.format((Date) ftxFechaEdicion.getValue());
        } else {
            JOptionPane.showMessageDialog(this, "Ingresa la fecha de edición del cómic.");
            return;
        }

        String tipo = null;

        if (rbtComic.isSelected()) {
            tipo = "Comic";
        } else if (rbtManga.isSelected()) {
            tipo = "Manga";
        }

        Tomo tomo = new Tomo(this.IDTomo, txtPortada.getText(), precio, String.valueOf(cbxEditorialUSA.getSelectedItem()), String.valueOf(cbxEditorialESP.getSelectedItem()),
                txtSuperheroe.getText(), txtTitulo.getText(), String.valueOf(cbxGenero.getSelectedItem()), txtPaginas.getText(), fecha,
                txtGuionista.getText(), txtDibujante.getText(), txtEnlace.getText(), tipo, txtColeccion.getText());
        Conexion c = new Conexion();
        c.conectar();
        if (c.modificarComic(tomo) == 1) {
            JOptionPane.showMessageDialog(this, "Cómic modificado satisfactoriamente en tu Biblioteca");

        } else {
            JOptionPane.showMessageDialog(this, "No se ha podido modificar el cómic en tu Biblioteca. Revisa los campos que debes introducir");
        }
        c.cerrar();
        this.setEditable(false);
    }//GEN-LAST:event_btnGuardarModificacionActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        setEditable(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnBorrarComicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarComicActionPerformed
        if (JOptionPane.showConfirmDialog(this, "¿Seguro que deseas borrar este cómic de tu Biblioteca?") == JOptionPane.YES_OPTION) {

            Conexion c = new Conexion();
            c.conectar();

            if (c.borrarComicDeseado(this.IDTomo) == 1) {
                JOptionPane.showMessageDialog(this, "Cómic borrado satisfactoriamente de tu Biblioteca");
                irBiblioteca();
            } else {
                JOptionPane.showMessageDialog(this, "No se ha podido borrar el cómic de tu Biblioteca");
            }
            c.cerrar();
        }

    }//GEN-LAST:event_btnBorrarComicActionPerformed

    private void rbtComicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtComicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtComicActionPerformed

    private void btnCompradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompradoActionPerformed
        comprado();
    }//GEN-LAST:event_btnCompradoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FichaComicDeseado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FichaComicDeseado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FichaComicDeseado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FichaComicDeseado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FichaComicDeseado(1).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnBorrarComic;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnComprado;
    private javax.swing.JButton btnGuardarModificacion;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnPortada;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbxEditorialESP;
    private javax.swing.JComboBox cbxEditorialUSA;
    private javax.swing.JComboBox cbxGenero;
    private javax.swing.JFormattedTextField ftxFechaEdicion;
    private javax.swing.JFormattedTextField ftxPrecio;
    private javax.swing.JLabel lblCabecera;
    private javax.swing.JLabel lblColeccion;
    private javax.swing.JLabel lblDibujante;
    private javax.swing.JLabel lblEditorialESP;
    private javax.swing.JLabel lblEditorialUSA;
    private javax.swing.JLabel lblEnlace;
    private javax.swing.JLabel lblFechaEdicion;
    private javax.swing.JLabel lblGenero;
    private javax.swing.JLabel lblGuionista;
    private javax.swing.JLabel lblImagenPortada;
    private javax.swing.JLabel lblPaginas;
    private javax.swing.JLabel lblPortada;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lblSuperheroe;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlCabecera;
    private javax.swing.JPanel pnlDatos;
    private javax.swing.JRadioButton rbtComic;
    private javax.swing.JRadioButton rbtManga;
    private javax.swing.JTextField txtColeccion;
    private javax.swing.JTextField txtDibujante;
    private javax.swing.JTextField txtEnlace;
    private javax.swing.JTextField txtGuionista;
    private javax.swing.JTextField txtPaginas;
    private javax.swing.JTextField txtPortada;
    private javax.swing.JTextField txtSuperheroe;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables

    private void setEditable(boolean b) {
        if (b) {
            btnAtras.setEnabled(false);
            btnLimpiar.setEnabled(true);
            btnModificar.setEnabled(false);
            btnCancelar.setEnabled(true);
            btnGuardarModificacion.setEnabled(true);
            btnPortada.setEnabled(true);
            ftxFechaEdicion.setEditable(true);
            ftxPrecio.setEditable(true);
            txtDibujante.setEditable(true);
            cbxEditorialESP.setEnabled(true);
            cbxEditorialUSA.setEnabled(true);
            txtEnlace.setEditable(true);
            cbxGenero.setEnabled(true);
            txtGuionista.setEditable(true);
            txtPaginas.setEditable(true);
            txtPortada.setEditable(true);
            txtSuperheroe.setEditable(true);
            txtTitulo.setEditable(true);
            rbtComic.setEnabled(true);
            rbtManga.setEnabled(true);
        } else {
            btnAtras.setEnabled(true);
            btnLimpiar.setEnabled(false);
            btnModificar.setEnabled(true);
            btnCancelar.setEnabled(false);
            btnGuardarModificacion.setEnabled(false);
            btnPortada.setEnabled(false);
            ftxFechaEdicion.setEditable(false);
            ftxPrecio.setEditable(false);
            txtDibujante.setEditable(false);
            cbxEditorialESP.setEnabled(false);
            cbxEditorialUSA.setEnabled(false);
            txtEnlace.setEditable(false);
            cbxGenero.setEnabled(false);
            txtGuionista.setEditable(false);
            txtPaginas.setEditable(false);
            txtPortada.setEditable(false);
            txtSuperheroe.setEditable(false);
            txtTitulo.setEditable(false);
            rbtComic.setEnabled(false);
            rbtManga.setEnabled(false);
        }
    }

    private void cargarComic() {
        Conexion c = new Conexion();
        c.conectar();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        Tomo tomo = c.cargarComicFicha(this.IDTomo);
        try {
            ftxFechaEdicion.setValue(sdf.parse(tomo.getFechaEdicion()));
        } catch (ParseException ex) {
            Logger.getLogger(FichaComicDeseado.class.getName()).log(Level.SEVERE, null, ex);
        }
        ftxPrecio.setValue(tomo.getPrecio());
        txtDibujante.setText(tomo.getDibujante());
        cbxEditorialESP.setSelectedItem(tomo.getEditorialESP());
        cbxEditorialUSA.setSelectedItem(tomo.getEditorialUSA());
        txtEnlace.setText(tomo.getLink());
        cbxGenero.setSelectedItem(tomo.getGenero());
        txtColeccion.setText(tomo.getColeccion());
        txtGuionista.setText(tomo.getGuionista());
        txtPaginas.setText(tomo.getPaginas());
        txtPortada.setText(tomo.getPortada());
        txtSuperheroe.setText(tomo.getSuperheroe());
        txtTitulo.setText(tomo.getTitulo());

        if (tomo.getTipo().equalsIgnoreCase("Comic")) {
            rbtComic.setSelected(true);
        } else if (tomo.getTipo().equalsIgnoreCase("Manga")) {
            rbtManga.setSelected(true);
        }

        ImageIcon portada = new ImageIcon(txtPortada.getText());
        Image img = portada.getImage();
        img = img.getScaledInstance(288, 437, java.awt.Image.SCALE_SMOOTH);
        portada = new ImageIcon(img);
        lblImagenPortada.setIcon(portada);
        c.cerrar();
    }

    private void comprado() {
        Double precio = 0.0;
        if (ftxPrecio.getValue() != null) {
            Number n = (Number) ftxPrecio.getValue();
            precio = n.doubleValue();
        } else {
            JOptionPane.showMessageDialog(this, "Ingresa el precio del cómic.");
            return;
        }

        String fecha = "";
        if (ftxFechaEdicion.getValue() != null) {
            SimpleDateFormat formatear = new SimpleDateFormat("dd/MM/yyyy");
            fecha = formatear.format((Date) ftxFechaEdicion.getValue());
        } else {
            JOptionPane.showMessageDialog(this, "Ingresa la fecha de edición del cómic.");
            return;
        }
        String tipo;
        if (rbtComic.isSelected()) {
            tipo = "Comic";
        } else if (rbtManga.isSelected()) {
            tipo = "Manga";
        } else {
            JOptionPane.showMessageDialog(this, "Marca si es un Cómic o un Manga.");
            return;
        }

        Tomo tomo = new Tomo(1, txtPortada.getText(), precio, String.valueOf(cbxEditorialUSA.getSelectedItem()), String.valueOf(cbxEditorialESP.getSelectedItem()),
                txtSuperheroe.getText(), txtTitulo.getText(), String.valueOf(cbxGenero.getSelectedItem()), txtPaginas.getText(), fecha,
                txtGuionista.getText(), txtDibujante.getText(), txtEnlace.getText(), tipo, txtColeccion.getText());
        Conexion c = new Conexion();
        c.conectar();
        if (c.guardarTomo(tomo) == 1) {
            JOptionPane.showConfirmDialog(this, "Cómic añadido satisfactoriamente a tu Biblioteca. ¿Desea añadir otro cómic?", "Añadido",
                    JOptionPane.YES_NO_OPTION);
                
        } else {
            JOptionPane.showMessageDialog(this, "No se ha podido añadir el cómic a tu Biblioteca. Revisa los campos que debes introducir");
        }

        if (c.borrarComicDeseado(this.IDTomo) == 1) {
            JOptionPane.showMessageDialog(this, "Cómic movido a tu Biblioteca");
            irBiblioteca();
        } else {
            JOptionPane.showMessageDialog(this, "No se ha podido borrar el cómic de tu Biblioteca");
        }

        c.cerrar();
    }
}
